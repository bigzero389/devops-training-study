{
    "Mappings": {
        "RegionMap": {
            "ap-northeast-1": {
                "AMI": "ami-dcfa4edd"
            },
            "ap-southeast-1": {
                "AMI": "ami-74dda626"
            },
            "eu-west-1": {
                "AMI": "ami-24506250"
            },
            "sa-east-1": {
                "AMI": "ami-3e3be423"
            },
            "us-east-1": {
                "AMI": "ami-7f418316"
            },
            "us-west-1": {
                "AMI": "ami-951945d0"
            },
            "us-west-2": {
                "AMI": "ami-16fd7026"
            }
        }
    },
    "Outputs": {
        "AZ": {
            "Description": "Availability Zone of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "instance",
                    "AvailabilityZone"
                ]
            }
        },
        "InstanceId": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value": {
                "Ref": "instance"
            }
        },
        "InstancePublicIp": {
            "Description": "Public IP of our instance.",
            "Value": {
                "Fn::GetAtt": [
                    "instance",
                    "PublicIp"
                ]
            }
        },
        "PrivateDNS": {
            "Description": "Private DNSName of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "instance",
                    "PrivateDnsName"
                ]
            }
        },
        "PrivateIP": {
            "Description": "Private IP address of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "instance",
                    "PrivateIp"
                ]
            }
        },
        "PublicDNS": {
            "Description": "Public DNSName of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "instance",
                    "PublicDnsName"
                ]
            }
        },
        "PublicIP": {
            "Description": "Public IP address of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "instance",
                    "PublicIp"
                ]
            }
        },
        "WebUrl": {
            "Description": "Application endpoint",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "instance",
                                "PublicDnsName"
                            ]
                        },
                        ":",
                        "3000"
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "KeyPair": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Description": "Name of an existing EC2 KeyPair to SSH",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "Admins": {
            "Properties": {
                "GroupName": {
                    "Ref": "CFNAdminGroup"
                },
                "Users": [
                    {
                        "Ref": "CFNUser"
                    }
                ]
            },
            "Type": "AWS::IAM::UserToGroupAddition"
        },
        "CFNAdminGroup": {
            "Type": "AWS::IAM::Group"
        },
        "CFNKeys": {
            "Properties": {
                "Status": "Active",
                "UserName": {
                    "Ref": "CFNUser"
                }
            },
            "Type": "AWS::IAM::AccessKey"
        },
        "CFNUser": {
            "Properties": {
                "LoginProfile": {
                    "Password": "Password"
                }
            },
            "Type": "AWS::IAM::User"
        },
        "CFNUserGroup": {
            "Type": "AWS::IAM::Group"
        },
        "CFNUserPolicies": {
            "Properties": {
                "Groups": [
                    {
                        "Ref": "CFNAdminGroup"
                    }
                ],
                "PolicyDocument": {
                    "AWSTemplateFormatVersion": "2010-09-09",
                    "Resources": {
                        "myS3Bucket": {
                            "DeletionPolicy": "Retain",
                            "Type": "AWS::S3::Bucket"
                        }
                    }
                },
                "PolicyName": "SecurityGroup"
            },
            "Type": "AWS::IAM::Policy"
        },
        "SecurityGroup": {
            "Properties": {
                "GroupDescription": "Allow SSH and TCP/3000 access",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "3000",
                        "IpProtocol": "tcp",
                        "ToPort": "3000"
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "Users": {
            "Properties": {
                "GroupName": {
                    "Ref": "CFNUserGroup"
                },
                "Users": [
                    {
                        "Ref": "CFNUser"
                    }
                ]
            },
            "Type": "AWS::IAM::UserToGroupAddition"
        },
        "instance": {
            "Properties": {
                "ImageId": "ami-dcfa4edd",
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "sudo yum install --enablerepo=epel -y nodejs",
                                "wget http://bit.ly/2vESNuc -O /home/ec2-user/helloworld.js",
                                "wget http://bit.ly/2vVvT18 -O /etc/init/helloworld.conf",
                                "start helloworld"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        }
    }
}
